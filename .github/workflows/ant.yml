name: Java CI

on:
  workflow_call:
    inputs:
      josm-revision:
        type: string
        default: ''
        description: The JOSM revision to use. May be empty (''), 'latest', 'tested', or 'rNUMBER' ('r10000')
        required: false
      operating-system:
        type: string
        default: ubuntu-latest
        description: The operating system to run on
        required: false
      java-version:
        type: number
        default: 8
        description: The java version to build against
        required: false
      java-distribution:
        type: string
        default: temurin
        description: The java distribution to build against
        required: false
      update-pluginssource:
        type: boolean
        default: false
        required: false
        description: Update the PluginsSource wiki page with a new URL.
      plugin-jar-name:
        type: string
        default: ''
        description: "The base name of the jar file, if not the repository name. Only useful in conjunction with `update-pluginssource`."
        required: false

env:
  # ANT_HOME is also our ant version
  ANT_HOME: 'apache-ant-1.10.12'

jobs:
  josm-build:
    runs-on: ${{ inputs.operating-system }}
    outputs:
      josm-revision: ${{ steps.josm-build.outputs.josm-revision }}
      josm-test-revision: ${{ steps.josm-build.outputs.josm-test-revision }}
    steps:
    - id: josm-build
      uses: JOSM/JOSMPluginAction/.github/actions/josm_build@v1
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        josm-revision: ${{ inputs.josm-revision }}

  plugin-build:
    runs-on: ${{ inputs.operating-system }}
    needs: josm-build
    steps:
    - uses: JOSM/JOSMPluginAction/.github/actions/setup-ant@v1
    - uses: JOSM/JOSMPluginAction/.github/actions/plugin_clone@v1
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        josm-revision: ${{ needs.josm-build.outputs.josm-revision }}
        josm-test-revision: ${{ needs.josm-build.outputs.josm-test-revision }}

    - name: Build with Ant
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        if [ $GITHUB_REF_TYPE == "tag" ]; then
          version=$GITHUB_REF_NAME
        else
          version="$GITHUB_REF_NAME-$GITHUB_SHA"
        fi
        ant -noinput -buildfile build.xml -Dplugin.version=$version

  plugin-test:
    runs-on: ${{ inputs.operating-system }}
    needs: [josm-build, plugin-build]
    steps:
    - uses: JOSM/JOSMPluginAction/.github/actions/setup-ant@v1
    - uses: JOSM/JOSMPluginAction/.github/actions/plugin_clone@v1
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        josm-revision: ${{ needs.josm-build.outputs.josm-revision }}
        josm-test-revision: ${{ needs.josm-build.outputs.josm-test-revision }}

    - name: Test with Ant
      id: ant-test
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        if [ -d "test" ]; then TEST_REPORT_PATH="test/report"; elif [ -d "src/test" ]; then TEST_REPORT_PATH="src/test/report"; else exit -1; fi
        echo "TEST_REPORT_PATH=${TEST_REPORT_PATH}" >> $GITHUB_ENV

        "$GITHUB_WORKSPACE/${{ env.ANT_HOME }}"/bin/ant -noinput -buildfile build.xml -Dplugin.version=$version -Dtest.headless=true test

    - name: Upload Ant reports
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: Ant reports for JOSM plugin ${{ github.event.repository.name }}
        path: |
          josm/plugins/${{ github.event.repository.name }}/${{ env.TEST_REPORT_PATH }}/*.txt
          josm/plugins/${{ github.event.repository.name }}/${{ env.TEST_REPORT_PATH }}/TEST*.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: 'josm/plugins/${{ github.event.repository.name }}/${{ env.TEST_REPORT_PATH }}/TEST*.xml'
        fail_on_failure: true

  release:
    runs-on: ${{ inputs.operating-system }}
    needs: [plugin-build, plugin-test]
    steps:
    - name: Get build
      id: cache-plugin-build
      uses: actions/cache@v3.0.0
      with:
        key: ${{ runner.os }}-${{ github.sha }}
        path: |
          josm/dist/${{ github.event.repository.name }}.jar
          josm/dist/${{ github.event.repository.name }}-javadoc.jar
          josm/dist/${{ github.event.repository.name }}-sources.jar
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          josm/dist/${{ github.event.repository.name }}.jar
          josm/dist/${{ github.event.repository.name }}-javadoc.jar
          josm/dist/${{ github.event.repository.name }}-sources.jar

    - name: Update PluginsSource (actually, updating SandBox until we know that there are no problems)
      uses: JOSM/JOSMPluginAction/.github/actions/update_pluginssource@v1
      if: ${{ inputs.update-pluginssource }}
      with:
        trac-username: ${{ secrets.TRAC_USERNAME }}
        trac-password: ${{ secrets.TRAC_PASSWORD }}
        plugin-jar-name: ${{ inputs.plugin-jar-name }}