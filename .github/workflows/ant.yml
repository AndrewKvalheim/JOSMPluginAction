name: Java CI

on:
  workflow_call:
    inputs:
      josm_revision:
        type: string
        default: ''
      operating_system:
        type: string
        default: ubuntu-latest
      java_version:
        type: number
        default: 8
      java_distribution:
        type: string
        default: temurin

env:
  # ANT_HOME is also our ant version
  ANT_HOME: 'apache-ant-1.10.12'

jobs:
  josm-build:
    runs-on: ubuntu-latest
    steps:
    - id: josm-build
      uses: ./.github/actions/josm_build
      with:
        josm_revision: ${{ inputs.josm_revision }}
        java-version: ${{ inputs.java_version }}
        distribution: ${{ inputs.java_distribution }}

  plugin-build:
    runs-on: ubuntu-latest
    needs: josm-build
    steps:
    - uses: ./.github/actions/josm_build
    - name: Set up JDK ${{ inputs.java_version }}
      if: steps.cache-josm.outputs.cache-hit != 'true'
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java_version }}
        distribution: ${{ inputs.java_distribution }}
    - uses: ./.github/actions/plugin_clone
    - name: Build with Ant
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        if [ $GITHUB_REF_TYPE == "tag" ]; then
          version=$GITHUB_REF_NAME
        else
          version="$GITHUB_REF_NAME-$GITHUB_SHA"
        fi
        ant -noinput -buildfile build.xml -Dplugin.version=$version
    - uses: actions/upload-artifact@v3
      with:
        name: josm-plugin-dist
        path: |
          josm/dist/${{ github.event.repository.name }}.jar
          josm/dist/${{ github.event.repository.name }}-javadoc.jar
          josm/dist/${{ github.event.repository.name }}-sources.jar

  plugin-test:
    runs-on: ubuntu-latest
    needs: josm-build
    steps:
    - name: Set up JDK ${{ inputs.java_version }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java_version }}
        distribution: ${{ inputs.java_distribution }}

    - uses: ./.github/actions/plugin_clone

    - uses: actions/download-artifact@v3
      with:
        name: josm-dist
        path: josm/core/dist
    - uses: actions/download-artifact@v3
      with:
        name: josm-test
        path: josm/core/test/build

    - name: Install Ant ${{ env.ANT_HOME }}
      run: |
        if [ ! -d tools ]; then mkdir tools; fi
        if [ ! -f tools/${{ env.ANT_HOME }}-bin.tar.gz ]; then
          curl -o tools/${{ env.ANT_HOME }}-bin.tar.gz https://downloads.apache.org/ant/binaries/${{ env.ANT_HOME }}-bin.tar.gz
        fi
        tar zxf tools/${{ env.ANT_HOME }}-bin.tar.gz
    - name: Ant diagnostics
      run: ${{ env.ANT_HOME }}/bin/ant -diagnostics

    - name: Build with Ant
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        if [ $GITHUB_REF_TYPE == "tag" ]; then
          version=$GITHUB_REF_NAME
        else
          version="$GITHUB_REF_NAME-$GITHUB_SHA"
        fi
        "$GITHUB_WORKSPACE/${{ env.ANT_HOME }}"/bin/ant -noinput -buildfile build.xml -Dplugin.version=$version
    - name: Test with Ant
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        "$GITHUB_WORKSPACE/${{ env.ANT_HOME }}"/bin/ant -noinput -buildfile build.xml -Dplugin.version=$version -Dtest.headless=true test
        exit $(grep -L ', Failures: 0, Skipped: ' test/report/*.txt | wc -l)
    - name: Dump errors if failed
      if: ${{ failure() }}
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        grep -L ', Failures: 0, Skipped: ' test/report/*.txt | xargs cat
    - name: Upload Ant reports
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: Ant reports for JOSM plugin ${{ github.event.repository.name }}
        path: |
          josm/plugins/${{ github.event.repository.name }}/test/report/*.txt
          josm/plugins/${{ github.event.repository.name }}/test/report/TEST*.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: 'josm/plugins/${{ github.event.repository.name }}/test/report/TEST*.xml'

  release:
    runs-on: ubuntu-latest
    needs: [plugin-build, plugin-test]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: josm-plugin-dist
        path: josm/dist
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          josm/dist/${{ github.event.repository.name }}.jar
          josm/dist/${{ github.event.repository.name }}-javadoc.jar
          josm/dist/${{ github.event.repository.name }}-sources.jar
