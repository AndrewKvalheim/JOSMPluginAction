name: Java CI

on:
  workflow_call:
    inputs:
      josm-revision:
        type: string
        default: ''
      operating-system:
        type: string
        default: ubuntu-latest
      java-version:
        type: number
        default: 8
      java-distribution:
        type: string
        default: temurin

env:
  # ANT_HOME is also our ant version
  ANT_HOME: 'apache-ant-1.10.12'

jobs:
  josm-build:
    runs-on: ${{ inputs.operating-system }}
    outputs:
      josm-revision: ${{ steps.josm-build.outputs.josm-revision }}
      josm-test-revision: ${{ steps.josm-build.outputs.josm-test-revision }}
    steps:
    - id: josm-build
      uses: tsmock/JOSMPluginAction/.github/actions/josm_build@main
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        josm-revision: ${{ inputs.josm-revision }}

  plugin-build:
    runs-on: ${{ inputs.operating-system }}
    needs: josm-build
    steps:
    - uses: tsmock/JOSMPluginAction/.github/actions/setup-ant@main
    - uses: tsmock/JOSMPluginAction/.github/actions/plugin_clone@main
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        josm-revision: ${{ needs.josm-build.outputs.josm-revision }}
        josm-test-revision: ${{ needs.josm-build.outputs.josm-test-revision }}

    - name: Build with Ant
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        if [ $GITHUB_REF_TYPE == "tag" ]; then
          version=$GITHUB_REF_NAME
        else
          version="$GITHUB_REF_NAME-$GITHUB_SHA"
        fi
        ant -noinput -buildfile build.xml -Dplugin.version=$version

  plugin-test:
    runs-on: ${{ inputs.operating-system }}
    needs: [josm-build, plugin-build]
    steps:
    - uses: tsmock/JOSMPluginAction/.github/actions/setup-ant@main
    - uses: tsmock/JOSMPluginAction/.github/actions/plugin_clone@main
      with:
        java-distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        josm-revision: ${{ needs.josm-build.outputs.josm-revision }}
        josm-test-revision: ${{ needs.josm-build.outputs.josm-test-revision }}

    - name: Test with Ant
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        "$GITHUB_WORKSPACE/${{ env.ANT_HOME }}"/bin/ant -noinput -buildfile build.xml -Dplugin.version=$version -Dtest.headless=true test
        exit $(grep -L ', Failures: 0, Skipped: ' test/report/*.txt | wc -l)
    - name: Dump errors if failed
      if: ${{ failure() }}
      run: |
        cd $GITHUB_WORKSPACE/josm/plugins/${{ github.event.repository.name }}
        grep -L ', Failures: 0, Skipped: ' test/report/*.txt | xargs cat
    - name: Upload Ant reports
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: Ant reports for JOSM plugin ${{ github.event.repository.name }}
        path: |
          josm/plugins/${{ github.event.repository.name }}/test/report/*.txt
          josm/plugins/${{ github.event.repository.name }}/test/report/TEST*.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always() # always run even if the previous step fails
      with:
        report_paths: 'josm/plugins/${{ github.event.repository.name }}/test/report/TEST*.xml'

  release:
    runs-on: ${{ inputs.operating-system }}
    needs: [plugin-build, plugin-test]
    steps:
    - name: Get build
      id: cache-plugin-build
      uses: actions/cache@v3.0.0
      with:
        key: ${{ runner.os }}-${{ github.sha }}
        path: |
          josm/dist/${{ github.event.repository.name }}.jar
          josm/dist/${{ github.event.repository.name }}-javadoc.jar
          josm/dist/${{ github.event.repository.name }}-sources.jar
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          josm/dist/${{ github.event.repository.name }}.jar
          josm/dist/${{ github.event.repository.name }}-javadoc.jar
          josm/dist/${{ github.event.repository.name }}-sources.jar
